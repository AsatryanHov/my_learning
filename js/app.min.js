/*
 * ATTENTION: The "eval" devtool has been used (maybe by default in mode: "development").
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
/******/ (() => { // webpackBootstrap
/******/ 	"use strict";
/******/ 	var __webpack_modules__ = ({

/***/ "./src/js/app.js":
/*!***********************!*\
  !*** ./src/js/app.js ***!
  \***********************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\ndocument.addEventListener(\"DOMContentLoaded\", function () {\r\n  hljs.highlightAll();\r\n\r\n  const tabHeaders = document.querySelectorAll(\"[data-tab]\");\r\n  const contentBoxes = document.querySelectorAll(\"[data-tab-content]\");\r\n\r\n  tabHeaders.forEach(function (item) {\r\n    item.addEventListener(\"click\", function () {\r\n      // 1. Скрыть все content box\r\n      contentBoxes.forEach(function (item) {\r\n        item.classList.add(\"hidden\");\r\n      });\r\n\r\n      const contentBox = document.querySelector(\"#\" + this.dataset.tab);\r\n      contentBox.classList.remove(\"hidden\");\r\n    });\r\n  });\r\n\r\n  //-------------------------------------------------------------------\r\n\r\n  const tabHeadersTS = document.querySelectorAll(\"[data-tabts]\");\r\n  const contentBoxesTS = document.querySelectorAll(\"[data-tabts-content]\");\r\n\r\n  tabHeadersTS.forEach(function (item) {\r\n    item.addEventListener(\"click\", function () {\r\n      // 1. Скрыть все content box\r\n      contentBoxesTS.forEach(function (item) {\r\n        item.classList.add(\"hidden\");\r\n      });\r\n\r\n      const contentBoxTS = document.querySelector(\"#\" + this.dataset.tabts);\r\n      contentBoxTS.classList.remove(\"hidden\");\r\n    });\r\n  });\r\n  // -------------------------------------------------------------\r\n  // -----------------------------tabs html---------------------------\r\n\r\n  // const tabHeadersHTML = document.querySelectorAll(\"[data-tabhtml]\");\r\n  // const contentBoxesHTML = document.querySelectorAll(\"[data-tabhtml-content]\");\r\n\r\n  // tabHeadersHTML.forEach(function (item) {\r\n  //   item.addEventListener(\"click\", function () {\r\n  //     // 1. Скрыть все content box\r\n  //     contentBoxesHTML.forEach(function (item) {\r\n  //       item.classList.add(\"hidden\");\r\n  //     });\r\n\r\n  //     const contentBoxHTML = document.querySelector(\"#\" + this.dataset.tabts);\r\n  //     contentBoxHTML.classList.remove(\"hidden\");\r\n  //   });\r\n  // });\r\n\r\n  // -----------------------------tabs html end---------------------------\r\n\r\n  // -----------------------------tabs css---------------------------\r\n\r\n  // const tabHeadersCSS = document.querySelectorAll(\"[data-tabcss]\");\r\n  // const contentBoxesCSS = document.querySelectorAll(\"[data-tabcss-content]\");\r\n\r\n  // tabHeadersHTML.forEach(function (item) {\r\n  //   item.addEventListener(\"click\", function () {\r\n  //     // 1. Скрыть все content box\r\n  //     contentBoxesHTML.forEach(function (item) {\r\n  //       item.classList.add(\"hidden\");\r\n  //     });\r\n\r\n  //     const contentBoxCSS = document.querySelector(\"#\" + this.dataset.tabts);\r\n  //     contentBoxCSS.classList.remove(\"hidden\");\r\n  //   });\r\n  // });\r\n\r\n  // -----------------------------tabs html end---------------------------\r\n\r\n  //------------------------------gen tabs---------------------\r\n\r\n  const tab_nav = document.querySelectorAll(\"[data-tab_nav]\");\r\n  const content_nav = document.querySelectorAll(\"[data-tab_nav-content]\");\r\n\r\n  tab_nav.forEach(function (item) {\r\n    item.addEventListener(\"click\", function () {\r\n      content_nav.forEach(function (content) {\r\n        content.classList.add(\"hidden\");\r\n      });\r\n\r\n      const content_id = this.dataset.tab_nav;\r\n      const content = document.querySelector(\"#\" + content_id);\r\n\r\n      if (content) {\r\n        content.classList.remove(\"hidden\");\r\n      }\r\n    });\r\n  });\r\n\r\n  //---------------------------------------end----------------------\r\n\r\n  // ------------------------SCROLL TO TOP---------------------------\r\n  function scrollToTop() {\r\n    window.scrollTo({\r\n      top: 0,\r\n      behavior: \"smooth\",\r\n    });\r\n  }\r\n\r\n  const scrollToTopButton = document.getElementById(\"scrollToTopButton\");\r\n\r\n  scrollToTopButton.addEventListener(\"click\", scrollToTop);\r\n\r\n  window.addEventListener(\"scroll\", () => {\r\n    const x = window.scrollY;\r\n    if (x > 800) {\r\n      scrollToTopButton.classList.remove(\"hidden\");\r\n      scrollToTopButton.classList.add(\"active\", \"fade\");\r\n    } else {\r\n      scrollToTopButton.classList.remove(\"active\", \"fade\");\r\n      scrollToTopButton.classList.add(\"hidden\");\r\n    }\r\n  });\r\n  // ----------------------------humburger-------------------------------------\r\n  const hamburger = document.querySelector(\".hamburger\");\r\n  const navMenu = document.querySelector(\".nav-menu\");\r\n\r\n  hamburger.addEventListener(\"click\", mobileMenu);\r\n\r\n  function mobileMenu() {\r\n    hamburger.classList.toggle(\"active\");\r\n    navMenu.classList.toggle(\"active\");\r\n  }\r\n\r\n  const navLink = document.querySelectorAll(\".nav_item\");\r\n\r\n  navLink.forEach((n) => n.addEventListener(\"click\", closeMenu));\r\n\r\n  function closeMenu() {\r\n    hamburger.classList.remove(\"active\");\r\n    navMenu.classList.remove(\"active\");\r\n  }\r\n  //-------------------------------------------------------------\r\n\r\n  //--------------------------  code copy func by btn ---------------------------------\r\n\r\n  document.addEventListener(\"click\", function (event) {\r\n    if (event.target && event.target.classList.contains(\"copyButton\")) {\r\n      copyCode(event);\r\n    }\r\n  });\r\n\r\n  function copyCode(event) {\r\n    const targetId = event.target.getAttribute(\"data-target\");\r\n    const codeElement = document.getElementById(targetId);\r\n    const codeText = codeElement.innerText || codeElement.textContent;\r\n\r\n    navigator.clipboard\r\n      .writeText(codeText)\r\n      .then(function () {\r\n        console.log(\"Text successfully copied to clipboard!\");\r\n      })\r\n      .catch(function (err) {\r\n        console.error(\"Unable to copy text to clipboard:\", err);\r\n      });\r\n  }\r\n\r\n  console.log(\"DOM is ready!\");\r\n});\r\n\n\n//# sourceURL=webpack://gulp-2022/./src/js/app.js?");

/***/ })

/******/ 	});
/************************************************************************/
/******/ 	// The require scope
/******/ 	var __webpack_require__ = {};
/******/ 	
/************************************************************************/
/******/ 	/* webpack/runtime/make namespace object */
/******/ 	(() => {
/******/ 		// define __esModule on exports
/******/ 		__webpack_require__.r = (exports) => {
/******/ 			if(typeof Symbol !== 'undefined' && Symbol.toStringTag) {
/******/ 				Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });
/******/ 			}
/******/ 			Object.defineProperty(exports, '__esModule', { value: true });
/******/ 		};
/******/ 	})();
/******/ 	
/************************************************************************/
/******/ 	
/******/ 	// startup
/******/ 	// Load entry module and return exports
/******/ 	// This entry module can't be inlined because the eval devtool is used.
/******/ 	var __webpack_exports__ = {};
/******/ 	__webpack_modules__["./src/js/app.js"](0, __webpack_exports__, __webpack_require__);
/******/ 	
/******/ })()
;